# Code generated by font_to_py.py.
# Font: Arial Bold.ttf Char set:  !"#%()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]_abcdefghijklmnopqrstuvwxyz{|}¬∞√Ä√Å√Ç√Ñ√á√à√â√ä√ã√ç√é√è√ë√ì√î√ñ√ó√ô√ö√õ√ú√ü√†√°√¢√§√ß√®√©√™√´√≠√Æ√Ø√±√≥√¥√∂√π√∫√ª√º√ø≈í≈ì≈∏‚Ç¨‚Üê‚Üë‚Üí‚Üì‚èé‚úì‚úî‚úïüîíüîì
# Cmd: font_to_py.py /System/Library/Fonts/Supplemental/Arial Bold.ttf 8 generated_fonts/Arial_Bold_8.py -k ui_charset.txt
version = '0.42'

def height():
    return 6

def baseline():
    return 5

def max_width():
    return 6

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 32

def max_ch():
    return 8595

_font =\
b'\x04\x00\x00\xa0\x20\x40\x40\x00\x02\x00\x00\x00\x00\x00\x00\x00'\
b'\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\xa0\x00\x00\x00\x00'\
b'\x03\x00\x00\x60\x20\xe0\x80\x00\x05\x00\x00\xd0\xc0\x38\x18\x00'\
b'\x02\x00\x00\x00\x80\x80\x80\x00\x02\x00\x00\x00\x40\x40\x40\x00'\
b'\x02\x00\x00\xc0\xc0\x00\x00\x00\x04\x00\x00\x40\xe0\x40\x00\x00'\
b'\x02\x00\x00\x00\x00\x00\x80\x00\x02\x00\x00\x00\x00\xc0\x00\x00'\
b'\x02\x00\x00\x00\x00\x00\x80\x00\x02\x00\x00\x00\x00\x80\x80\x00'\
b'\x03\x00\x00\xa0\xa0\xa0\x60\x00\x03\x00\x00\x40\x80\x00\x00\x00'\
b'\x03\x00\x00\xa0\x20\x40\xe0\x00\x03\x00\x00\xa0\x60\x20\xe0\x00'\
b'\x03\x00\x00\x60\x20\xe0\x20\x00\x03\x00\x00\x60\xe0\x20\xe0\x00'\
b'\x03\x00\x00\x20\xe0\xa0\x60\x00\x03\x00\x00\xe0\x40\x40\x40\x00'\
b'\x03\x00\x00\xa0\x60\xa0\xe0\x00\x03\x00\x00\xa0\xa0\x60\xe0\x00'\
b'\x02\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00'\
b'\x04\x00\x00\x00\xc0\x60\x00\x00\x04\x00\x00\x00\xe0\xe0\x00\x00'\
b'\x04\x00\x00\x80\x60\x60\x00\x00\x04\x00\x00\xa0\x20\x40\x40\x00'\
b'\x06\x00\x00\x48\xb4\xd4\xf8\x48\x04\x00\x00\x60\x60\x70\x90\x00'\
b'\x04\x00\x00\x90\xf0\x90\xf0\x00\x04\x00\x00\x50\x80\x80\x70\x00'\
b'\x04\x00\x00\x90\x90\x90\xe0\x00\x04\x00\x00\x80\xe0\x80\xf0\x00'\
b'\x04\x00\x00\x80\xe0\x80\x80\x00\x05\x00\x00\x50\x80\x90\x70\x00'\
b'\x04\x00\x00\x90\xf0\x90\x90\x00\x02\x00\x00\x80\x80\x80\x80\x00'\
b'\x03\x00\x00\x20\x20\x20\xe0\x00\x04\x00\x00\xa0\xe0\xe0\x90\x00'\
b'\x04\x00\x00\x80\x80\x80\xe0\x00\x05\x00\x00\xd8\xd8\x88\xa8\x00'\
b'\x04\x00\x00\xd0\xd0\xb0\x90\x00\x05\x00\x00\x50\x80\x90\x70\x00'\
b'\x04\x00\x00\xb0\x90\x80\x80\x00\x05\x00\x00\x50\x80\x90\x70\x00'\
b'\x04\x00\x00\x90\xb0\xa0\x90\x00\x04\x00\x00\xb0\x60\x10\x60\x00'\
b'\x04\x00\x00\x40\x40\x40\x40\x00\x04\x00\x00\x90\x90\x90\x70\x00'\
b'\x04\x00\x00\x90\x60\x60\x60\x00\x06\x00\x00\xb0\xb8\x58\x48\x00'\
b'\x04\x00\x00\x60\x60\x60\x90\x00\x04\x00\x00\x90\x60\x00\x00\x00'\
b'\x04\x00\x00\x20\x60\x40\xf0\x00\x02\x00\x00\x80\x80\x80\x80\x80'\
b'\x02\x00\x00\x40\x40\x40\x40\x40\x03\x00\x00\x00\x00\x00\x00\x00'\
b'\x03\x00\x00\x00\xa0\xe0\xe0\x00\x04\x00\x00\x80\xe0\x80\xe0\x00'\
b'\x03\x00\x00\x00\xe0\x80\x60\x00\x04\x00\x00\x20\xe0\xa0\x60\x00'\
b'\x03\x00\x00\x00\xa0\xe0\xe0\x00\x02\x00\x00\x00\xc0\x00\x00\x00'\
b'\x04\x00\x00\x00\xe0\xa0\x60\xa0\x04\x00\x00\x80\xe0\xa0\xa0\x00'\
b'\x02\x00\x00\x00\x80\x80\x80\x00\x02\x00\x00\x00\x80\x80\x80\x80'\
b'\x03\x00\x00\x80\xa0\xc0\xa0\x00\x02\x00\x00\x80\x80\x80\x80\x00'\
b'\x05\x00\x00\x00\xe8\xa8\xa8\x00\x04\x00\x00\x00\xe0\xa0\xa0\x00'\
b'\x04\x00\x00\x00\xe0\x80\x60\x00\x04\x00\x00\x00\xe0\x80\xe0\x80'\
b'\x04\x00\x00\x00\xe0\xa0\x60\x20\x02\x00\x00\x00\xc0\x80\x80\x00'\
b'\x03\x00\x00\x00\xa0\x60\xe0\x00\x02\x00\x00\x80\xc0\x80\x40\x00'\
b'\x04\x00\x00\x00\xa0\xa0\x60\x00\x03\x00\x00\x00\xa0\x20\x40\x00'\
b'\x05\x00\x00\x00\xa0\x30\x50\x00\x03\x00\x00\x00\x20\x40\xa0\x00'\
b'\x03\x00\x00\x00\xa0\x20\x40\x40\x03\x00\x00\x00\xe0\x40\xe0\x00'\
b'\x02\x00\x00\x40\x40\x80\x40\x40\x02\x00\x00\x00\x00\x00\x00\x00'\
b'\x02\x00\x00\x00\x40\x40\x40\x00\x02\x00\x00\x80\x00\x00\x00\x00'\
b'\x04\x00\x00\x60\x60\x70\x90\x00\x04\x00\x00\x60\x60\x70\x90\x00'\
b'\x04\x00\x00\x60\x60\x70\x90\x00\x04\x00\x00\x60\x60\x70\x90\x00'\
b'\x04\x00\x00\x50\x80\x80\x70\x20\x04\x00\x00\x80\xe0\x80\xf0\x00'\
b'\x04\x00\x00\x80\xe0\x80\xf0\x00\x04\x00\x00\x80\xe0\x80\xf0\x00'\
b'\x04\x00\x00\x80\xe0\x80\xf0\x00\x02\x00\x00\x80\x80\x80\x80\x00'\
b'\x02\x00\x00\x80\x80\x80\x80\x00\x02\x00\x00\x80\x80\x80\x80\x00'\
b'\x04\x00\x00\xd0\xd0\xb0\x90\x00\x05\x00\x00\x50\x80\x90\x70\x00'\
b'\x05\x00\x00\x50\x80\x90\x70\x00\x05\x00\x00\x50\x80\x90\x70\x00'\
b'\x04\x00\x00\x00\x60\x60\x00\x00\x04\x00\x00\x90\x90\x90\x70\x00'\
b'\x04\x00\x00\x90\x90\x90\x70\x00\x04\x00\x00\x90\x90\x90\x70\x00'\
b'\x04\x00\x00\x90\x90\x90\x70\x00\x04\x00\x00\xa0\xa0\xa0\xe0\x00'\
b'\x03\x00\x00\x00\xa0\xe0\xe0\x00\x03\x00\x00\x40\xa0\xe0\xe0\x00'\
b'\x03\x00\x00\x20\xa0\xe0\xe0\x00\x03\x00\x00\x00\xa0\xe0\xe0\x00'\
b'\x03\x00\x00\x00\xe0\x80\x60\x20\x03\x00\x00\x00\xa0\xe0\xe0\x00'\
b'\x03\x00\x00\x40\xa0\xe0\xe0\x00\x03\x00\x00\x20\xa0\xe0\xe0\x00'\
b'\x03\x00\x00\x00\xa0\xe0\xe0\x00\x02\x00\x00\x80\x80\x80\x80\x00'\
b'\x02\x00\x00\xc0\x80\x80\x80\x00\x02\x00\x00\x00\x80\x80\x80\x00'\
b'\x04\x00\x00\x00\xe0\xa0\xa0\x00\x04\x00\x00\x40\xe0\x80\x60\x00'\
b'\x04\x00\x00\x60\xe0\x80\x60\x00\x04\x00\x00\x00\xe0\x80\x60\x00'\
b'\x04\x00\x00\x00\xa0\xa0\x60\x00\x04\x00\x00\x40\xa0\xa0\x60\x00'\
b'\x04\x00\x00\x60\xa0\xa0\x60\x00\x04\x00\x00\x00\xa0\xa0\x60\x00'\
b'\x03\x00\x00\x00\xa0\x20\x40\x40\x06\x00\x00\xd0\x9c\x90\x7c\x00'\
b'\x06\x00\x00\x00\x78\x98\x78\x00\x04\x00\x00\x90\x60\x00\x00\x00'\
b'\x03\x00\x00\x40\xe0\xe0\x60\x00\x06\x00\x00\x00\x40\xfc\x40\x00'\
b'\x03\x00\x00\x40\x40\x40\x40\x40\x06\x00\x00\x00\x08\xfc\x08\x00'\
b'\x03\x00\x00\x40\x40\x40\x40\x40'

_sparse =\
b'\x20\x00\x01\x00\x21\x00\x02\x00\x22\x00\x03\x00\x23\x00\x04\x00'\
b'\x25\x00\x05\x00\x28\x00\x06\x00\x29\x00\x07\x00\x2a\x00\x08\x00'\
b'\x2b\x00\x09\x00\x2c\x00\x0a\x00\x2d\x00\x0b\x00\x2e\x00\x0c\x00'\
b'\x2f\x00\x0d\x00\x30\x00\x0e\x00\x31\x00\x0f\x00\x32\x00\x10\x00'\
b'\x33\x00\x11\x00\x34\x00\x12\x00\x35\x00\x13\x00\x36\x00\x14\x00'\
b'\x37\x00\x15\x00\x38\x00\x16\x00\x39\x00\x17\x00\x3a\x00\x18\x00'\
b'\x3b\x00\x19\x00\x3c\x00\x1a\x00\x3d\x00\x1b\x00\x3e\x00\x1c\x00'\
b'\x3f\x00\x1d\x00\x40\x00\x1e\x00\x41\x00\x1f\x00\x42\x00\x20\x00'\
b'\x43\x00\x21\x00\x44\x00\x22\x00\x45\x00\x23\x00\x46\x00\x24\x00'\
b'\x47\x00\x25\x00\x48\x00\x26\x00\x49\x00\x27\x00\x4a\x00\x28\x00'\
b'\x4b\x00\x29\x00\x4c\x00\x2a\x00\x4d\x00\x2b\x00\x4e\x00\x2c\x00'\
b'\x4f\x00\x2d\x00\x50\x00\x2e\x00\x51\x00\x2f\x00\x52\x00\x30\x00'\
b'\x53\x00\x31\x00\x54\x00\x32\x00\x55\x00\x33\x00\x56\x00\x34\x00'\
b'\x57\x00\x35\x00\x58\x00\x36\x00\x59\x00\x37\x00\x5a\x00\x38\x00'\
b'\x5b\x00\x39\x00\x5d\x00\x3a\x00\x5f\x00\x3b\x00\x61\x00\x3c\x00'\
b'\x62\x00\x3d\x00\x63\x00\x3e\x00\x64\x00\x3f\x00\x65\x00\x40\x00'\
b'\x66\x00\x41\x00\x67\x00\x42\x00\x68\x00\x43\x00\x69\x00\x44\x00'\
b'\x6a\x00\x45\x00\x6b\x00\x46\x00\x6c\x00\x47\x00\x6d\x00\x48\x00'\
b'\x6e\x00\x49\x00\x6f\x00\x4a\x00\x70\x00\x4b\x00\x71\x00\x4c\x00'\
b'\x72\x00\x4d\x00\x73\x00\x4e\x00\x74\x00\x4f\x00\x75\x00\x50\x00'\
b'\x76\x00\x51\x00\x77\x00\x52\x00\x78\x00\x53\x00\x79\x00\x54\x00'\
b'\x7a\x00\x55\x00\x7b\x00\x56\x00\x7c\x00\x57\x00\x7d\x00\x58\x00'\
b'\xb0\x00\x59\x00\xc0\x00\x5a\x00\xc1\x00\x5b\x00\xc2\x00\x5c\x00'\
b'\xc4\x00\x5d\x00\xc7\x00\x5e\x00\xc8\x00\x5f\x00\xc9\x00\x60\x00'\
b'\xca\x00\x61\x00\xcb\x00\x62\x00\xcd\x00\x63\x00\xce\x00\x64\x00'\
b'\xcf\x00\x65\x00\xd1\x00\x66\x00\xd3\x00\x67\x00\xd4\x00\x68\x00'\
b'\xd6\x00\x69\x00\xd7\x00\x6a\x00\xd9\x00\x6b\x00\xda\x00\x6c\x00'\
b'\xdb\x00\x6d\x00\xdc\x00\x6e\x00\xdf\x00\x6f\x00\xe0\x00\x70\x00'\
b'\xe1\x00\x71\x00\xe2\x00\x72\x00\xe4\x00\x73\x00\xe7\x00\x74\x00'\
b'\xe8\x00\x75\x00\xe9\x00\x76\x00\xea\x00\x77\x00\xeb\x00\x78\x00'\
b'\xed\x00\x79\x00\xee\x00\x7a\x00\xef\x00\x7b\x00\xf1\x00\x7c\x00'\
b'\xf3\x00\x7d\x00\xf4\x00\x7e\x00\xf6\x00\x7f\x00\xf9\x00\x80\x00'\
b'\xfa\x00\x81\x00\xfb\x00\x82\x00\xfc\x00\x83\x00\xff\x00\x84\x00'\
b'\x52\x01\x85\x00\x53\x01\x86\x00\x78\x01\x87\x00\xac\x20\x88\x00'\
b'\x90\x21\x89\x00\x91\x21\x8a\x00\x92\x21\x8b\x00\x93\x21\x8c\x00'\

_mvfont = memoryview(_font)
_mvsp = memoryview(_sparse)
ifb = lambda l : l[0] | (l[1] << 8)

def bs(lst, val):
    while True:
        m = (len(lst) & ~ 7) >> 1
        v = ifb(lst[m:])
        if v == val:
            return ifb(lst[m + 2:])
        if not m:
            return 0
        lst = lst[m:] if v < val else lst[:m]

def get_ch(ch):
    doff = bs(_mvsp, ord(ch)) << 3
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 6
    return _mvfont[doff + 2:next_offs], 6, width

